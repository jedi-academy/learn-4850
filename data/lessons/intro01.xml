<?xml version="1.0" encoding="UTF-8"?>
<!--
Lesson 01a - Introduction
-->
<lesson status="2.0">

     <slide title="XML BASICS (Refresher?)" layout="normal" >
        <div class="left">
            <p>
                <strong>X M L</strong> stands for eXtensible Markup Language</p>
            <p>Used for storing object or data structure state.</p>
        </div>
        <div class="right">
            <p>Visualizing XML: elements (dots) may have children (below), 
                may have text values (blue),
                and may have set of attributes (red)</p>
            <br/>
            <img class="scale" width="308" height="296" src="/pix/lessons/7-1.png"/>
          
        </div>
    </slide>

    <!-- Agenda -->
    <slide title="Agenda" layout="normal">
        <ol>
           <li>
                <a href="#{tag0}">Distributed System Glue</a>
            </li>
            <li>
                <a href="#{tag1}">What is XML?</a>
            </li>
            <li>
                <a href="#{tag2}">XML Structure</a>
            </li>
            <li>
                <a href="#{tag5}">Design Strategies</a>
            </li>
        </ol>
    </slide>

   <slide title="0. Technical Terminology" layout="normal">
        <p class="center">
            <strong>Glue:</strong>
            <br/>
            A generic term for any interface logic or <br/>
            protocol that connects two component blocks.
        </p>
        <p class="center">
            <img class="scale" width="698" height="400" src="/pix/lessons/x/x01.jpg"/>
        </p>    
    </slide>

    <slide title="Standard Glue (no choice)" layout="normal">
        <p class="center">
            Transport: HTTP, HTTPS, Web Sockets, AMQP<br/>
            Representation: XML, JSON, RSS<br/>
            Application: RPC, SOA, REST<br/>
            Infrastructure: email, messaging, services
        </p>
        <p class="center">
            <img class="scale" width="698" height="400" src="/pix/lessons/x/x01.jpg"/>
        </p>    
    </slide>


    <!-- Normal slides -->

    <slide title="1. WHAT IS XML?" layout="normal" tag="tag1">
        <ul>
            <li>Way of digitally representing data structures</li>
            <li>Adds tags to text data so that it can be processed by 
                any application and is human-readable</li>
            <li>Application can understand data's meaning and how to process it</li>
            <li>Can be used to extend HTML, store object state, or even to 
                define new "languages"</li>
        </ul>
    </slide>

    <slide title="XML Documents" layout="normal" >
        <ul>
            <li>Documents are based on a logical tree structure
                <ul>
                    <li>Documents can be recursively broken down into elements</li>
                    <li>Elements can have attributes</li>
                </ul>
            </li>
            <li>Documents of the same "type" have the same structure</li>
            <li>Physically, a document can be broken up using entities - think  separation into files</li>
        </ul>
    </slide>

    <slide title="XML Markup" layout="normal" >
        <ul>
            <li>Represents the logical structure</li>
            <li>Connects/contains the physical entities</li>
            <li>An XML document is made up of markup and character data</li>
            <li>Markup processed by XML parser</li>
            <li>Character data passed on to application</li>
            <li>Markup is found between &lt; and &gt; just like HTML</li>
            <li>Reserved characters: &amp; and ; pair can also be significant</li>
        </ul>
    </slide>

    <slide title="An Example XML Document" layout="normal" >
        <code>
            &lt;shoes&gt;<br/>
  &#160;&#160;&lt;item uid="S121"&gt;<br/>
    &#160;&#160;&#160;&#160;&lt;manufacturer&gt;Nike&lt;/manufacturer&gt;<br/>
    &#160;&#160;&#160;&#160;&lt;model&gt;hightop&lt;/model&gt;<br/>
    &#160;&#160;&#160;&#160;&lt;designer&gt;Steve Nash&lt;/designer&gt;<br/>
    &#160;&#160;&#160;&#160;&lt;price&gt;125.00&lt;/price&gt;<br/>
    &#160;&#160;&#160;&#160;&lt;in-stock&gt;176&lt;/in-stock&gt;<br/>
  &#160;&#160;&lt;/item&gt;<br/>
&lt;/shoes&gt;
        </code>
    </slide>

    <slide title="XML Design Goals" layout="normal" >
        <ul>
            <li>Simple</li>
            <li>Human readable</li>
            <li>Platform neutral</li>
        </ul>
    </slide>

    <slide title="A More Complex Example" layout="normal" >
        <div class="left">
            <code>
&lt;?xml version="1.0"?&gt;<br/>
&lt;!DOCTYPE MEMO SYSTEM "memo.dtd"&gt;<br/>
&lt;memo&gt;<br/>
&lt;from&gt;<br/>
&#160;&#160;&lt;name&gt;Paul Prescod&lt;/name&gt;<br/>
&#160;&#160;&lt;email&gt;papresco@prescod.com&lt;/email&gt;<br/>
&lt;/from&gt;<br/>
&lt;to&gt;<br/>
&#160;&#160;&lt;name&gt;Charles GoldFarb&lt;/name&gt;<br/>
&#160;&#160;&lt;email&gt;charles@sgmlsource.com&lt;/email&gt;<br/>
&lt;/to&gt;<br/>
&lt;subject&gt;Another Memo Example&lt;/subject&gt;                
            </code>      
        </div>
        <div class="right">
            <code>
 &lt;body&gt;<br/>
&lt;paragraph&gt; Charles, I wanted to suggest that we <br/>
&lt;emphasis&gt;not&lt;/emphasis&gt; use the typical memo <br/>
                example in our book.  Memos tend to be used <br/>
                anywhere a small, simple document type is needed, <br/>
                but they are just &lt;emphasis&gt;so&lt;/emphasis&gt; boring!<br/>
&lt;/paragraph&gt;<br/>
&lt;/body&gt;<br/>
&lt;/memo&gt;               
            </code>
        </div>
    </slide>

    <slide title="2. XML STRUCTURE" layout="normal" tag="tag2">
        <p>There are three ways to look at the structure of an XML document:</p>
        <ul>
            <li>Tree structure, conceptually</li>
            <li>Text document</li>
            <li>DOM</li>
        </ul>
        <p>These all have to do with different ways of thinking about the 
            pieces of an XML document:</p>
        <ul>
            <li>directives (document type &amp; entities)</li>
            <li>elements (with attributes)</li>
        </ul>
    </slide>

    <slide title="Logical Structure" layout="normal" >
        <ul>
            <li>Tree structured hierarchy</li>
            <li>Every document has a single outermost element,
                called the "root" or "document" element</li>
            <li>Every element can contain from 0 to many nested elements,
                defined using particular XML tags</li>
            <li>Can be navigated in a predictable way</li>
        </ul>
    </slide>

    <slide title="Physical Structure" layout="normal" >
        <ul>
            <li>Character string</li>
            <li>Stored in 1 or more files</li>
            <li>XML document can be broken down physically into pieces of text 
                or sub strings</li>
        </ul>
    </slide>

    <slide title="Document Contents" layout="normal" >
        <ul>
            <li>XML signature (often forgiven)</li>
            <li>DOCTYPE directive (optional)<ul>
                    <li>Entity directives (optional)</li>
                </ul>
            </li>
            <li>Nested elements (at least one)<ul>
                    <li>Attributes for elements (optional)</li>
                    <li>Embedded entity references (optional)</li>
                </ul>
            </li>
        </ul>
    </slide>

    <slide title="Document Object Model" layout="normal" >
        <ul>
            <li>Tree structure, where each node â€¦</li>
            <li>Has a text value (or can be empty)</li>
            <li>May have attributes</li>
            <li>May have child nodes</li>
        </ul>
        <p>There is a Javascript API for this.</p>
        <p>The W3C prescribes language-neutral API for interfaces</p>
    </slide>
    <slide title="3. XML STRATEGIES" layout="normal" tag="tag5">
        <ul>
            <li>Goals to shoot for:<ul>
                    <li>Logical or intuitive</li>
                    <li>Constrainable</li>
                    <li>Easy to process</li>
                </ul>
            </li>
            <li>Bad things?<br/>
                Nothing is right for all uses</li>
            <li>Strategies<ul>
                    <li>Element centric</li>
                    <li>Attribute centric</li>
                    <li>Combination</li>
                </ul>
            </li>
        </ul>
    </slide>

</lesson>
